@domain = http://localhost:3000
@jwt = eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE2NDczODAzNzd9.cL57Lh7G1wEYJsabOzcWxwAoYvQtV8S_41fE2iCObMs
### Users create (signup) (works)
POST {{domain}}/users
Content-Type: application/json

{
  "name": "birch",
  "email": "birch@gmail.com",
  "password": "password",
  "password_confirmation": "password",
  "phone_number": "543-234-989",
  "location_city": "Country side of firn"
}

### Sessions create (login) (works)
POST {{domain}}/sessions
Content-Type: application/json

{
  "email": "turkey@gmail.com",
  "password": "password"
}

### User show
GET {{domain}}/users/5
Content-Type: application/json
Authorization: Bearer {{jwt}}

### Users Update working
PATCH {{domain}}/users/5 
Content-Type: application/json
Authorization: Bearer {{jwt}}

{
  "location_city": "Maple forest"
}

### User destroy (works)
DELETE {{domain}}/users/3
Content-Type: application/json
Authorization: Bearer {{jwt}}


##### All user models are working.(this includes session method or login.)


### Pet index
GET {{domain}}/pets
Content-Type: application/json

### Pet show
GET {{domain}}/pets/1
Content-Type: application/json
# Authorization: Bearer {{jwt}}

### Pet Create working
POST {{domain}}/pets
Content-Type: application/json
Authorization: Bearer {{jwt}} 

{
  "name": "test",
  "gender": "male",
  "description": "A simple kind reptiallian who like to curl up to gather warmth. He's a friendly snake. The name 'test' comes from his pattern of scales",
  "img_url": "",
  "likes": "sleeping under the woodchips, and curling around human hands",
  "dislikes": "too much movement, loud noises",
  "fixed": false
}

### Pet Update working
PATCH {{domain}}/pets/7
Content-Type: application/json
Authorization: Bearer {{jwt}}

{
"name": "name"
}

### Pet Delete (works)
DELETE {{domain}}/pets/7
Content-Type: application/json
Authorization: Bearer {{jwt}}


##### All Pet methods are working


### Conversation Index
GET {{domain}}/conversations
Content-Type: application/json
Authorization: Bearer {{jwt}}

### Conversation show
GET {{domain}}/conversations/4
Content-Type: application/json
Authorization: Bearer {{jwt}}

### Conversation delete (works)
DELETE {{domain}}/conversations/2
Content-Type: application/json
Authorization: Bearer {{jwt}}

### Conversation create
POST {{domain}}/conversations
Content-Type: application/json
Authorization: Bearer {{jwt}}

{
  "recipient_id": 1
}


##### All conversation methods work


### Message index (Works but need to be changed to only show the ones between the two users.)
GET {{domain}}/messages
Content-Type: application/json
Authorization: Bearer {{jwt}}

### Message create
POST {{domain}}/messages
Content-Type: application/json
Authorization: Bearer {{jwt}}

{
"conversation_id": "4",
"content": "message 2 for conversation 4"
}


##### All message methods work